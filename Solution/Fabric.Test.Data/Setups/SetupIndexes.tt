<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="$(SolutionDir)../Packages/Weaver.1.0.0/Weaver.dll" #>
<#@ assembly name="$(ProjectDir)/bin/Debug/Fabric.Infrastructure.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="Fabric.Infrastructure.Domain" #>
<#@ import namespace="Weaver.Items" #>
<#@ import namespace="Weaver.Schema" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
// GENERATED CODE
// Changes made to this source file will be overwritten
// Generated on <#= DateTime.Now.ToString() #>

using Fabric.Domain;
using Weaver;

namespace Fabric.Db.Data.Setups {

	/*================================================================================================*/
	public static class SetupIndexes {


		////////////////////////////////////////////////////////////////////////////////////////////////
		/*--------------------------------------------------------------------------------------------*/
		public static void SetupAll(DataSet pSet) {
			const WeaverTasks.ItemType n = WeaverTasks.ItemType.Node;

<#
IList<string> nodes = SchemaHelper.GetNodes();

foreach ( string name in nodes ) {
	SchemaHelperNode hn = SchemaHelper.GetNode(name);
	WeaverNodeSchema node = hn.NodeSchema;
	
	if ( node.IsAbstract ) { continue; }
#>
			pSet.AddIndex(WeaverTasks.CreateKeyIndex<<#= node.Name #>>(x => x.<#= node.Name #>Id, n));
<#
} //end node loop
#>
		}

	}

}