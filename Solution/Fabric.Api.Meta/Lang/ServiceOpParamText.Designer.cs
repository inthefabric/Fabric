//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fabric.Api.Meta.Lang {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ServiceOpParamText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ServiceOpParamText() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Fabric.Api.Meta.Lang.ServiceOpParamText", typeof(ServiceOpParamText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The disambiguation text for the new Class.  When provided, the disambiguation text permits the use of a non-unique name..
        /// </summary>
        internal static string Modify_AddClass_Disamb {
            get {
                return ResourceManager.GetString("Modify_AddClass_Disamb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the new Class. It must be unique on its own, or be unique in combination with the disambiguation text..
        /// </summary>
        internal static string Modify_AddClass_Name {
            get {
                return ResourceManager.GetString("Modify_AddClass_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A brief description of the new Class. It can be useful for helping others understand the creator&apos;s intended purpose or meaning..
        /// </summary>
        internal static string Modify_AddClass_Note {
            get {
                return ResourceManager.GetString("Modify_AddClass_Note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TODO.
        /// </summary>
        internal static string Modify_AddClasses_Classes {
            get {
                return ResourceManager.GetString("Modify_AddClasses_Classes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the FactorAssertion for the new Factor. In cases where the assertion type is unclear or not known, please use the &apos;Undefined&apos; FactorAssertion..
        /// </summary>
        internal static string Modify_AddFactor_FactorAssertionId {
            get {
                return ResourceManager.GetString("Modify_AddFactor_FactorAssertionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IsDefining value for the new Factor..
        /// </summary>
        internal static string Modify_AddFactor_IsDefining {
            get {
                return ResourceManager.GetString("Modify_AddFactor_IsDefining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A sentence or short paragraph describing (in a human-readable format) the intended meaning of the new Factor. A descriptive note can help others understand the creator&apos;s intended purpose or meaning for the Factor..
        /// </summary>
        internal static string Modify_AddFactor_Note {
            get {
                return ResourceManager.GetString("Modify_AddFactor_Note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the primary Artifact for the new Factor..
        /// </summary>
        internal static string Modify_AddFactor_PrimaryArtifactId {
            get {
                return ResourceManager.GetString("Modify_AddFactor_PrimaryArtifactId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the related Artifact for the new Factor. The related Artifact cannot be the same as the primary Artifact..
        /// </summary>
        internal static string Modify_AddFactor_RelatedArtifactId {
            get {
                return ResourceManager.GetString("Modify_AddFactor_RelatedArtifactId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TODO.
        /// </summary>
        internal static string Modify_AddFactors_Factors {
            get {
                return ResourceManager.GetString("Modify_AddFactors_Factors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The disambiguation text for the new Instance. When provided, the disambiguation text permits the use of a non-unique name..
        /// </summary>
        internal static string Modify_AddInstance_Disamb {
            get {
                return ResourceManager.GetString("Modify_AddInstance_Disamb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the new Instance. It does not need to be unique..
        /// </summary>
        internal static string Modify_AddInstance_Name {
            get {
                return ResourceManager.GetString("Modify_AddInstance_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A brief description of the new Instance.  It can be useful for helping others understand the creator&apos;s intended purpose or meaning..
        /// </summary>
        internal static string Modify_AddInstance_Note {
            get {
                return ResourceManager.GetString("Modify_AddInstance_Note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The complete absolute URL for new Url object. It must include the URL&apos;s protocol (such as &apos;http://&apos;)..
        /// </summary>
        internal static string Modify_AddUrl_AbsoluteUrl {
            get {
                return ResourceManager.GetString("Modify_AddUrl_AbsoluteUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the new Url..
        /// </summary>
        internal static string Modify_AddUrl_Name {
            get {
                return ResourceManager.GetString("Modify_AddUrl_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the DescriptorType for the new Descriptor..
        /// </summary>
        internal static string Modify_AttachDescriptorToFactor_DescriptorTypeId {
            get {
                return ResourceManager.GetString("Modify_AttachDescriptorToFactor_DescriptorTypeId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the Artifact that refines the new Descriptor&apos;s DescriptorType..
        /// </summary>
        internal static string Modify_AttachDescriptorToFactor_DescriptorTypeRefineId {
            get {
                return ResourceManager.GetString("Modify_AttachDescriptorToFactor_DescriptorTypeRefineId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the incomplete Factor that will receive the Descriptor attachment..
        /// </summary>
        internal static string Modify_AttachDescriptorToFactor_FactorId {
            get {
                return ResourceManager.GetString("Modify_AttachDescriptorToFactor_FactorId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the Artifact that refines the Factor&apos;s primary Artifact..
        /// </summary>
        internal static string Modify_AttachDescriptorToFactor_PrimaryArtifactRefineId {
            get {
                return ResourceManager.GetString("Modify_AttachDescriptorToFactor_PrimaryArtifactRefineId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the Artifact that refines the Factor&apos;s related Artifact..
        /// </summary>
        internal static string Modify_AttachDescriptorToFactor_RelatedArtifactRefineId {
            get {
                return ResourceManager.GetString("Modify_AttachDescriptorToFactor_RelatedArtifactRefineId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the DirectorType for the new Director..
        /// </summary>
        internal static string Modify_AttachDirectorToFactor_DirectorTypeId {
            get {
                return ResourceManager.GetString("Modify_AttachDirectorToFactor_DirectorTypeId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the incomplete Factor that will receive the Director attachment..
        /// </summary>
        internal static string Modify_AttachDirectorToFactor_FactorId {
            get {
                return ResourceManager.GetString("Modify_AttachDirectorToFactor_FactorId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the DirectorAction associated with the Factor&apos;s primary Artifact..
        /// </summary>
        internal static string Modify_AttachDirectorToFactor_PrimaryDirectorActionId {
            get {
                return ResourceManager.GetString("Modify_AttachDirectorToFactor_PrimaryDirectorActionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the DirectorAction associated with the Factor&apos;s related Artifact..
        /// </summary>
        internal static string Modify_AttachDirectorToFactor_RelatedDirectorActionId {
            get {
                return ResourceManager.GetString("Modify_AttachDirectorToFactor_RelatedDirectorActionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The date and time for the new Eventor. This value must be accurate to the level of precision defined by the specified EventorPrecision. Set unused month/day values to 1, and unused hour/minute values (and beyond) to 0..
        /// </summary>
        internal static string Modify_AttachEventorToFactor_DateTime {
            get {
                return ResourceManager.GetString("Modify_AttachEventorToFactor_DateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the EventorPrecision for the new Eventor..
        /// </summary>
        internal static string Modify_AttachEventorToFactor_EventorPrecisionId {
            get {
                return ResourceManager.GetString("Modify_AttachEventorToFactor_EventorPrecisionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the EventorType for the new Eventor..
        /// </summary>
        internal static string Modify_AttachEventorToFactor_EventorTypeId {
            get {
                return ResourceManager.GetString("Modify_AttachEventorToFactor_EventorTypeId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the incomplete Factor that will receive the Eventor attachment..
        /// </summary>
        internal static string Modify_AttachEventorToFactor_FactorId {
            get {
                return ResourceManager.GetString("Modify_AttachEventorToFactor_FactorId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the incomplete Factor that will receive the Identor attachment..
        /// </summary>
        internal static string Modify_AttachIdentorToFactor_FactorId {
            get {
                return ResourceManager.GetString("Modify_AttachIdentorToFactor_FactorId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the IdentorType for the new Identor..
        /// </summary>
        internal static string Modify_AttachIdentorToFactor_IdentorTypeId {
            get {
                return ResourceManager.GetString("Modify_AttachIdentorToFactor_IdentorTypeId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text-based value for the new Identor..
        /// </summary>
        internal static string Modify_AttachIdentorToFactor_Value {
            get {
                return ResourceManager.GetString("Modify_AttachIdentorToFactor_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the incomplete Factor that will receive the Locator attachment..
        /// </summary>
        internal static string Modify_AttachLocatorToFactor_FactorId {
            get {
                return ResourceManager.GetString("Modify_AttachLocatorToFactor_FactorId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the LocatorType for the new Locator..
        /// </summary>
        internal static string Modify_AttachLocatorToFactor_LocatorTypeId {
            get {
                return ResourceManager.GetString("Modify_AttachLocatorToFactor_LocatorTypeId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The X value for the new Locator..
        /// </summary>
        internal static string Modify_AttachLocatorToFactor_ValueX {
            get {
                return ResourceManager.GetString("Modify_AttachLocatorToFactor_ValueX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Y value for the new Locator..
        /// </summary>
        internal static string Modify_AttachLocatorToFactor_ValueY {
            get {
                return ResourceManager.GetString("Modify_AttachLocatorToFactor_ValueY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Z value for the new Locator..
        /// </summary>
        internal static string Modify_AttachLocatorToFactor_ValueZ {
            get {
                return ResourceManager.GetString("Modify_AttachLocatorToFactor_ValueZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Artifact which provides meaning for the new Vector..
        /// </summary>
        internal static string Modify_AttachVectorToFactor_AxisArtifactId {
            get {
                return ResourceManager.GetString("Modify_AttachVectorToFactor_AxisArtifactId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the incomplete Factor that will receive the Vector attachment..
        /// </summary>
        internal static string Modify_AttachVectorToFactor_FactorId {
            get {
                return ResourceManager.GetString("Modify_AttachVectorToFactor_FactorId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value for the new Vector. This value must be within the range specified by the VectorType. Decimal values are not supported; if additional precision is required, use a VectorUnitPrefix such as Milli or Micro..
        /// </summary>
        internal static string Modify_AttachVectorToFactor_Value {
            get {
                return ResourceManager.GetString("Modify_AttachVectorToFactor_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the VectorType for the new Vector..
        /// </summary>
        internal static string Modify_AttachVectorToFactor_VectorTypeId {
            get {
                return ResourceManager.GetString("Modify_AttachVectorToFactor_VectorTypeId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the VectorUnit for the new Vector..
        /// </summary>
        internal static string Modify_AttachVectorToFactor_VectorUnitId {
            get {
                return ResourceManager.GetString("Modify_AttachVectorToFactor_VectorUnitId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the VectorUnitPrefix for the new Vector..
        /// </summary>
        internal static string Modify_AttachVectorToFactor_VectorUnitPrefixId {
            get {
                return ResourceManager.GetString("Modify_AttachVectorToFactor_VectorUnitPrefixId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the incomplete Factor to be completed..
        /// </summary>
        internal static string Modify_CompleteFactor_FactorId {
            get {
                return ResourceManager.GetString("Modify_CompleteFactor_FactorId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IsCompleted value must be &apos;true&apos;..
        /// </summary>
        internal static string Modify_CompleteFactor_IsCompleted {
            get {
                return ResourceManager.GetString("Modify_CompleteFactor_IsCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifies the Factor to be deleted..
        /// </summary>
        internal static string Modify_DeleteFactor_FactorId {
            get {
                return ResourceManager.GetString("Modify_DeleteFactor_FactorId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IsDeleted value must be &apos;true&apos;..
        /// </summary>
        internal static string Modify_DeleteFactor_IsDeleted {
            get {
                return ResourceManager.GetString("Modify_DeleteFactor_IsDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The App ID value (an integer) for the App making the request. This parameter is only used by the &apos;[[Client Credentials|Oper|Oauth.AccessTokenClientCredentials]]&apos; and &apos;[[Client Data Provider|Oper|Oauth.AccessTokenClientDataProv]]&apos; flows..
        /// </summary>
        internal static string Oauth_AccessToken_ClientId {
            get {
                return ResourceManager.GetString("Oauth_AccessToken_ClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authorization code obtained after a successful OAuth entry process. This parameter is only used by the &apos;[[Authorization Code|Oper|Oauth.AccessTokenAuthCode]]&apos; flow..
        /// </summary>
        internal static string Oauth_AccessToken_Code {
            get {
                return ResourceManager.GetString("Oauth_AccessToken_Code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The User ID value (an integer) for the Data Provider of the App making the request. Upon App creation, Fabric creates a special &apos;Data Provider&apos; User which the App uses for creating items in the Fabric system. This parameter is only used by the &apos;[[Client Data Provider|Oper|Oauth.AccessTokenClientDataProv]]&apos; flow..
        /// </summary>
        internal static string Oauth_AccessToken_DataProvUserId {
            get {
                return ResourceManager.GetString("Oauth_AccessToken_DataProvUserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the desired access token flow.  The four accepted (case-sensitive) values are &apos;[[authorization_code|Oper|Oauth.AccessTokenAuthCode]]&apos;, &apos;[[refresh|Oper|Oauth.AccessTokenRefresh]]&apos;, &apos;[[client_credentials|Oper|Oauth.AccessTokenClientCredentials]]&apos;, and &apos;[[client_data_provider|Oper|Oauth.AccessTokenClientDataProv]]&apos;..
        /// </summary>
        internal static string Oauth_AccessToken_GrantType {
            get {
                return ResourceManager.GetString("Oauth_AccessToken_GrantType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This value must be exactly the same as the redirect URI provided for the OAuth entry process..
        /// </summary>
        internal static string Oauth_AccessToken_RedirectUri {
            get {
                return ResourceManager.GetString("Oauth_AccessToken_RedirectUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The refresh token obtained after a successful &apos;[[Authorization Code|Oper|Oauth.AccessTokenAuthCode]]&apos; access token flow.  A refresh token only applies to User-based OAuth sessions, not for App-based OAuth sessions.  This parameter is only used by the &apos;[[Refresh|Oper|Oauth.AccessTokenRefresh]]&apos; flow..
        /// </summary>
        internal static string Oauth_AccessToken_Refresh {
            get {
                return ResourceManager.GetString("Oauth_AccessToken_Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The alpha-numeric Secret for the App making the request. This verifies that the App itself is making the request, and not an imposter.  For this reason, the secret code should not be shared with anyone..
        /// </summary>
        internal static string Oauth_AccessToken_Secret {
            get {
                return ResourceManager.GetString("Oauth_AccessToken_Secret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ID of the Fabric App making the OAuth Login request.  The access code provided after a successful OAuth process will be associated with this App ID and the authenticated User&apos;s ID..
        /// </summary>
        internal static string Oauth_Login_ClientId {
            get {
                return ResourceManager.GetString("Oauth_Login_ClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The URL which will receive success/error redirects from the OAuth Login process.  This URL should handle the following query-string parameters: access_code, error, error_description, state..
        /// </summary>
        internal static string Oauth_Login_RedirectUri {
            get {
                return ResourceManager.GetString("Oauth_Login_RedirectUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Describes which type of authentication should be performed. For now, this value should always be &apos;code&apos;. Fabric may accept more response types in the future..
        /// </summary>
        internal static string Oauth_Login_ResponseType {
            get {
                return ResourceManager.GetString("Oauth_Login_ResponseType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Describes the level of access the App will have to the User&apos;s account.  This value is required by the OAuth 2.0 specification, however, Fabric currently ignores it.  All OAuth requests currently receive the same level of access to the User&apos;s account.  Fabric may begin using this parameter in the future..
        /// </summary>
        internal static string Oauth_Login_Scope {
            get {
                return ResourceManager.GetString("Oauth_Login_Scope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides a security function for a Fabric App.  All success/message redirect responses include a &apos;state&apos; query-string parameter.  The App should check this value against the state value provided in the initial request.  The two values should always be equal. If the values are not equal, then the redirect did not come from the Fabric OAuth process (or from a different user&apos;s process), and should be handled accordingly..
        /// </summary>
        internal static string Oauth_Login_State {
            get {
                return ResourceManager.GetString("Oauth_Login_State", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Causes the login process to behave in different ways.  If a value of &apos;1&apos; is provided, the user will see the login page even if they are currently authenticated with Fabric.  This is useful shared-computer scenarios, where the most-recently authenticated user may be different from the user making the current request..
        /// </summary>
        internal static string Oauth_Login_SwitchMode {
            get {
                return ResourceManager.GetString("Oauth_Login_SwitchMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The access token for the desired OAuth session. This request will fail if the token has already been invalidated by a previous logout..
        /// </summary>
        internal static string Oauth_Logout_Token {
            get {
                return ResourceManager.GetString("Oauth_Logout_Token", resourceCulture);
            }
        }
    }
}
