<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension=".css" #> 
<#@ assembly name="$(SolutionDir)..\Packages\Weaver.1.0.0\Weaver.dll" #>
<#@ assembly name="$(SolutionDir)Fabric.Infrastructure\bin\Debug\Fabric.Infrastructure.dll" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Fabric.Infrastructure.Domain" #>
<#@ import namespace="Weaver" #>
<#@ import namespace="Weaver.Schema" #>
/*GENERATED CODE
Changes made to this source file will be overwritten
Generated on <#= DateTime.Now.ToString() #> */

/* NODES */

<#
var rand = new Random(999);

IList<string> nodes = SchemaHelper.GetNodes();

foreach ( string name in nodes ) {
	SchemaHelperNode hn = SchemaHelper.GetNode(name);
	WeaverNodeSchema node = hn.NodeSchema;

	if ( node.IsAbstract ) { continue; }
#>
.node<#= node.Name #> { fill: <#= NewColor(rand, 0.9) #>; }
<#
}
#>

/* RELS */

<#
IList<string> relTypes = SchemaHelper.GetRelTypes();

foreach ( string name in relTypes ) {
	string col = NewColor(rand, 0.2);
#>
.link<#= name #> { stroke: <#= col #>; }
<#
}
#>

<#+ 
public string NewColor(Random pRand, double pAlpha) {
	return "rgba("+
		(pRand.Next()%255)+","+
		(pRand.Next()%255)+","+
		(pRand.Next()%255)+","+
		pAlpha+")";
}
#>